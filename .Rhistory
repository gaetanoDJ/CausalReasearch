biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(attrape_pc, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(attrape_pc)
# Plot group-time ATTs
ggdid(attrape_pc)
# Event-study
agg_effects_es <- aggte(attrape_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
attlarceny_pc <- att_gt(yname = "larceny_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects1 <- aggte(attlarceny_pc, type = "group")
summary(agg_effects1)
# Group-time ATTs you want this
summary(attlarceny_pc)
# Plot group-time ATTs
ggdid(attlarceny_pc)
# Event-study you want this
agg_effects_es1 <- aggte(attlarceny_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es1)
# Event-study you want this
agg_effects_es1 <- aggte(attlarceny_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es)
# Event-study you want this
agg_effects_es1 <- aggte(attlarceny_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es1)
# Plot group-time ATTs
ggdid(attlarceny_pc)
# Event-study you want this
agg_effects_es2 <- aggte(attvehicle_pc, type = "dynamic", na.rm = TRUE)
############################## vehicle
attvehicle_pc <- att_gt(yname = "vehicle_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects2 <- aggte(attvehicle_pc, type = "group")
summary(agg_effects2)
# Group-time ATTs you want this
summary(attvehicle_pc)
# Plot group-time ATTs
ggdid(attlarceny_pc)
# Event-study you want this
agg_effects_es2 <- aggte(attvehicle_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es2)
############################## burglary
attburglary_pc <- att_gt(yname = "burglary_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects3 <- aggte(attburglary_pc, type = "group")
summary(agg_effects3)
# Group-time ATTs you want this
summary(attburglary_pc)
# Plot group-time ATTs
ggdid(attburglary_pc)
# Event-study you want this
agg_effects_es3 <- aggte(attburglary_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es3)
############################## manslaughter
attmanslaughter_pc <- att_gt(yname = "manslaughter_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects4 <- aggte(attmanslaughter_pc, type = "group")
summary(agg_effects4)
# Group-time ATTs you want this
summary(attmanslaughter_pc)
# Plot group-time ATTs
ggdid(attmanslaughter_pc)
# Event-study you want this
agg_effects_es4 <- aggte(attmanslaughter_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es4)
############################## robbery
attrobbery_pc <- att_gt(yname = "robbery_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects5 <- aggte(attrobbery_pc, type = "group")
summary(agg_effects5)
# Group-time ATTs you want this
summary(attrobbery_pc)
# Event-study you want this
agg_effects_es5 <- aggte(attrobbery_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es5)
############################## murder
attmurder_pc<- att_gt(yname = "murder_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects6 <- aggte(attmurder_pc, type = "group")
summary(agg_effects6)
# Group-time ATTs you want this
summary(attmurder_pc)
# Group-time ATTs you want this
summary(attmurder_pc$)
# Group-time ATTs you want this
summary(attmurder_pc)
# Event-study you want this
agg_effects_es6 <- aggte(attmurder_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es6)
# Plot event-study coefficients
ggdid(agg_effects_es6)
library(readxl)
CleanUP <- read_excel("CleanUP.xlsx")
View(CleanUP)
CleanUPWork <- collap(CleanUP, ~ stname + year)
View(CleanUPWork)
CleanUPWork <- collap(CleanUP, ~ stname + year, FUN = fsum)
View(CleanUPWork)
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
View(CleanUPWork)
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
CleanUPWork <- collap(CleanUP, ~ stname + year, FUN = fsum)
library(readxl)
CleanUP <- read_excel("CleanUP.xlsx")
View(CleanUP)
CleanUPWork <- collap(CleanUP, ~ stname + year, FUN = fsum)
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
CleanUPWork <- collap(CleanUP, ~ stname + year, FUN = fsum, custom = list(fmean=22))
View(CleanUPWork)
CleanUPWork <- collap(CleanUP, ~ custom = list(fmean=22, fsum(6:21,23)))
CleanUPWork <- collap(CleanUP, custom = list(fmean=22, fsum(6:21,23)))
CleanUPWork <- collap(CleanUP, custom = list(fmean=22, fsum(6:21), fsum(23)))
CleanUPWork <- collap(CleanUP,~ stname + year, custom = list(fmean=22, fsum(6:21), fsum(23)))
CleanUPWork <- collap(CleanUP,~ stname + year, custom = list(fmean=22, fsum(6:21,23)))
CleanUPWork <- collap(CleanUP,~ stname + year, custom = list(fmean=22, fsum()))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean=(22), fsum()))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "FIrst.Treat", fsum()))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum()))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum(!"First.Treat")))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum(!("First.Treat"))))
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum =))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum =(!("First.Treat"))))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum = 1:21,23))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= "First.Treat", fsum = 4:21,23))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= 22, fsum = 4:21,23))
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= 22, fsum = 4:21, fsum = 23))
View(CleanUPWork)
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
View(CleanUPWork)
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(attrape_pc, type = "group")
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = First.Treat, # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = CleanUPWork$First.Treat, # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
CleanUPWork <- as.data.frame(CleanUPWork)
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "notyettreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
CleanUPWork <- collap(CleanUP, ~ stname + year, custom = list(fmean= 22, fmean= 1, fsum = 4:21, fsum = 23))
CleanUPWork$treated <- ifelse(CleanUPWork$treated>1,1,0)
############################## rape
attrape_pc <- att_gt(yname = "rape_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(attrape_pc, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(attrape_pc)
# Event-study
agg_effects_es <- aggte(attrape_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
############################## larceny
attlarceny_pc <- att_gt(yname = "larceny_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects1 <- aggte(attlarceny_pc, type = "group")
summary(agg_effects1)
# Event-study you want this
agg_effects_es1 <- aggte(attlarceny_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es1)
############################## vehicle
attvehicle_pc <- att_gt(yname = "vehicle_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects2 <- aggte(attvehicle_pc, type = "group")
summary(agg_effects2)
# Event-study you want this
agg_effects_es2 <- aggte(attvehicle_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es2)
############################## burglary
attburglary_pc <- att_gt(yname = "burglary_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects3 <- aggte(attburglary_pc, type = "group")
summary(agg_effects3)
# Event-study you want this
agg_effects_es3 <- aggte(attburglary_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es3)
############################## manslaughter
attmanslaughter_pc <- att_gt(yname = "manslaughter_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects4 <- aggte(attmanslaughter_pc, type = "group")
summary(agg_effects4)
# Event-study you want this
agg_effects_es4 <- aggte(attmanslaughter_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es4)
############################## robbery
attrobbery_pc <- att_gt(yname = "robbery_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects5 <- aggte(attrobbery_pc, type = "group")
summary(agg_effects5)
# Event-study you want this
agg_effects_es5 <- aggte(attrobbery_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es5)
############################## murder
attmurder_pc<- att_gt(yname = "murder_pc", # LHS variable
tname = "year", # time variable
idname = "statefip", # id variable
gname = "First.Treat", # first treatment period variable
data = CleanUPWork, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE,
clustervars = "statefip", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
agg_effects6 <- aggte(attmurder_pc, type = "group")
summary(agg_effects6)
# Event-study you want this
agg_effects_es6 <- aggte(attmurder_pc, type = "dynamic", na.rm = TRUE)
summary(agg_effects_es6)
